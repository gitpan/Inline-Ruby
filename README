INTRODUCTION

Inline::Ruby -- Write Perl subs and classes in Ruby.

Inline::Ruby lets you write Perl subroutines and classes in Python. It
dynamically translates the parameters and return values into native data types
for both languages -- and it knows how to "wrap" most other types of data.

Example:

   use Inline Ruby => <<'END';
   def JAxH(x)
     return "Just Another #{x} Hacker"
   end
   END
   print JAxH('Inline'), "\n"

When run, this complete program prints:

   Just Another Inline Hacker

==============================================================================
INSTALLATION

This module requires Inline.pm version 0.43 or higher to be installed. In
addition, you need Ruby 1.6.3 or greater installed. (Ruby version down to
1.6.0 will probably work, but the lowest tested version is 1.6.3.) The current
stable version of Ruby, version 1.6.6, is recommended.

To install Inline::Python do this:

perl Makefile.PL
make
make test
make install

(On ActivePerl for MSWin32, use nmake instead of make.)

You have to 'make install' before you can run it successfully.

==============================================================================
INFORMATION

- For more information on Inline::Ruby see 'perldoc Inline::Ruby'
- For more information about Inline.pm, see 'perldoc Inline'
- For information on Ruby or the Ruby API, visit http://www.ruby-lang.org

The Inline::Ruby mailing list is inline@perl.org Send mail to
inline-subscribe@perl.org to subscribe.

Please send questions and comments to "Neil Watkiss" <NEILW@cpan.org>

Copyright (c) 2002, Neil Watkiss. All Rights Reserved.
